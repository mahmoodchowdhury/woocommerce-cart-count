<?php
/**
 * The function `display_cart_info` is a PHP function that generates a shortcode to display the cart
 * icon and item count in a website.
 * 
 * For the icons, I am using icofont (https://icofont.com) but you can use any.
 * 
 * @return the HTML code for displaying the cart icon and item count.
 */
function display_cart_info() {
    /* `ob_start();` is a PHP function that starts output buffering. Output buffering allows you to
    capture the output generated by PHP code and store it in a buffer instead of immediately sending
    it to the browser. This can be useful in situations where you want to manipulate or modify the
    output before it is sent to the browser. In this case, `ob_start();` is used to capture the HTML
    code generated by the function `display_cart_info()` and store it in a buffer, which is then
    returned using `ob_get_clean();`. */
    ob_start();

    // Get the number of items in the cart
    $item_count = WC()->cart->get_cart_contents_count();

    // Output the cart icon and item count
    ?>
    <div class="cart-info">
        <a class="cart-icon" href="<?php echo wc_get_cart_url(); ?>">
            <i class="icofont-duotone icofont-cart"></i>
            <span class="count"><?php echo $item_count; ?></span>
        </a>
    </div>
    <?php

    /* `return ob_get_clean();` is returning the contents of the output buffer and cleaning (clearing)
    the buffer. */
    return ob_get_clean();
}
add_shortcode('cart_info', 'display_cart_info');

/**
 * The function `update_cart_info_ajax` is a PHP function that retrieves the number of items in the
 * cart and sends it as a JSON response.
 */
function update_cart_info_ajax() {
    // Get the number of items in the cart
    $item_count = WC()->cart->get_cart_contents_count();

    // Send the response
    wp_send_json(array(
        'item_count' => $item_count,
    ));
}
add_action('wp_ajax_update_cart_info', 'update_cart_info_ajax');
add_action('wp_ajax_nopriv_update_cart_info', 'update_cart_info_ajax');